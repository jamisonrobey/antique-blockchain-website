/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  AntiqueCertificationIssuance,
  AntiqueCertificationIssuanceInterface,
} from "../AntiqueCertificationIssuance";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "artifactName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "certificationDate",
        type: "uint256",
      },
    ],
    name: "CertificationIssued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "artifactName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "revocationDate",
        type: "uint256",
      },
    ],
    name: "CertificationRevoked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "certifications",
    outputs: [
      {
        internalType: "address",
        name: "ownerAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "artifactName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "certificationDate",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isCertified",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCertificationCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getCertificationDetails",
    outputs: [
      {
        internalType: "address",
        name: "ownerAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "artifactName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "certificationDate",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isCertified",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_artifactName",
        type: "string",
      },
    ],
    name: "issueCertification",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "revokeCertification",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506110cf806100606000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632f5fce6c146100675780633c0359a41461008357806344afd134146100b65780634bfa124b146100d457806380d7e8f1146101075780638da5cb5b14610123575b600080fd5b610081600480360381019061007c9190610816565b610141565b005b61009d60048036038101906100989190610816565b610327565b6040516100ad949392919061093e565b60405180910390f35b6100be61041c565b6040516100cb919061098a565b60405180910390f35b6100ee60048036038101906100e99190610816565b610429565b6040516100fe949392919061093e565b60405180910390f35b610121600480360381019061011c9190610ada565b6105d9565b005b61012b6107a8565b6040516101389190610b23565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c690610bb0565b60405180910390fd5b6001805490508110610216576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020d90610c1c565b60405180910390fd5b6001818154811061022a57610229610c3c565b5b906000526020600020906004020160030160009054906101000a900460ff16610288576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027f90610cb7565b60405180910390fd5b60006001828154811061029e5761029d610c3c565b5b906000526020600020906004020160030160006101000a81548160ff021916908315150217905550807f92f4b6339df1e83d908b368b10192a59917cc2ad4681a6f3e37aad7ee1b14b66600183815481106102fc576102fb610c3c565b5b90600052602060002090600402016001014260405161031c929190610dd0565b60405180910390a250565b6001818154811061033757600080fd5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101805461038090610d06565b80601f01602080910402602001604051908101604052809291908181526020018280546103ac90610d06565b80156103f95780601f106103ce576101008083540402835291602001916103f9565b820191906000526020600020905b8154815290600101906020018083116103dc57829003601f168201915b5050505050908060020154908060030160009054906101000a900460ff16905084565b6000600180549050905090565b600060606000806001805490508510610477576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046e90610c1c565b60405180910390fd5b60006001868154811061048d5761048c610c3c565b5b90600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461050c90610d06565b80601f016020809104026020016040519081016040528092919081815260200182805461053890610d06565b80156105855780601f1061055a57610100808354040283529160200191610585565b820191906000526020600020905b81548152906001019060200180831161056857829003601f168201915b50505050508152602001600282015481526020016003820160009054906101000a900460ff161515151581525050905080600001518160200151826040015183606001519450945094509450509193509193565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610667576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065e90610bb0565b60405180910390fd5b600160405180608001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200183815260200142815260200160011515815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190816107289190610f97565b506040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555050503373ffffffffffffffffffffffffffffffffffffffff167f80921f8b9bf7e88bf2a2d09a6fc7b1bd7d51986868ae201e3cf0337ebe057181824260405161079d929190611069565b60405180910390a250565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6107f3816107e0565b81146107fe57600080fd5b50565b600081359050610810816107ea565b92915050565b60006020828403121561082c5761082b6107d6565b5b600061083a84828501610801565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061086e82610843565b9050919050565b61087e81610863565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156108be5780820151818401526020810190506108a3565b60008484015250505050565b6000601f19601f8301169050919050565b60006108e682610884565b6108f0818561088f565b93506109008185602086016108a0565b610909816108ca565b840191505092915050565b61091d816107e0565b82525050565b60008115159050919050565b61093881610923565b82525050565b60006080820190506109536000830187610875565b818103602083015261096581866108db565b90506109746040830185610914565b610981606083018461092f565b95945050505050565b600060208201905061099f6000830184610914565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6109e7826108ca565b810181811067ffffffffffffffff82111715610a0657610a056109af565b5b80604052505050565b6000610a196107cc565b9050610a2582826109de565b919050565b600067ffffffffffffffff821115610a4557610a446109af565b5b610a4e826108ca565b9050602081019050919050565b82818337600083830152505050565b6000610a7d610a7884610a2a565b610a0f565b905082815260208101848484011115610a9957610a986109aa565b5b610aa4848285610a5b565b509392505050565b600082601f830112610ac157610ac06109a5565b5b8135610ad1848260208601610a6a565b91505092915050565b600060208284031215610af057610aef6107d6565b5b600082013567ffffffffffffffff811115610b0e57610b0d6107db565b5b610b1a84828501610aac565b91505092915050565b6000602082019050610b386000830184610875565b92915050565b7f4f6e6c7920636f6e7472616374206f776e65722063616e20706572666f726d2060008201527f7468697320616374696f6e000000000000000000000000000000000000000000602082015250565b6000610b9a602b8361088f565b9150610ba582610b3e565b604082019050919050565b60006020820190508181036000830152610bc981610b8d565b9050919050565b7f496e76616c696420696e64657800000000000000000000000000000000000000600082015250565b6000610c06600d8361088f565b9150610c1182610bd0565b602082019050919050565b60006020820190508181036000830152610c3581610bf9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f43657274696669636174696f6e20616c7265616479207265766f6b6564000000600082015250565b6000610ca1601d8361088f565b9150610cac82610c6b565b602082019050919050565b60006020820190508181036000830152610cd081610c94565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610d1e57607f821691505b602082108103610d3157610d30610cd7565b5b50919050565b60008190508160005260206000209050919050565b60008154610d5981610d06565b610d63818661088f565b94506001821660008114610d7e5760018114610d9457610dc7565b60ff198316865281151560200286019350610dc7565b610d9d85610d37565b60005b83811015610dbf57815481890152600182019150602081019050610da0565b808801955050505b50505092915050565b60006040820190508181036000830152610dea8185610d4c565b9050610df96020830184610914565b9392505050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610e4d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610e10565b610e578683610e10565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610e94610e8f610e8a846107e0565b610e6f565b6107e0565b9050919050565b6000819050919050565b610eae83610e79565b610ec2610eba82610e9b565b848454610e1d565b825550505050565b600090565b610ed7610eca565b610ee2818484610ea5565b505050565b5b81811015610f0657610efb600082610ecf565b600181019050610ee8565b5050565b601f821115610f4b57610f1c81610d37565b610f2584610e00565b81016020851015610f34578190505b610f48610f4085610e00565b830182610ee7565b50505b505050565b600082821c905092915050565b6000610f6e60001984600802610f50565b1980831691505092915050565b6000610f878383610f5d565b9150826002028217905092915050565b610fa082610884565b67ffffffffffffffff811115610fb957610fb86109af565b5b610fc38254610d06565b610fce828285610f0a565b600060209050601f8311600181146110015760008415610fef578287015190505b610ff98582610f7b565b865550611061565b601f19841661100f86610d37565b60005b8281101561103757848901518255600182019150602085019450602081019050611012565b868310156110545784890151611050601f891682610f5d565b8355505b6001600288020188555050505b505050505050565b6000604082019050818103600083015261108381856108db565b90506110926020830184610914565b939250505056fea264697066735822122098faa01e9ab093d72d219dc9298c422fb1aba9ce394802e7ada599ca2f811ab664736f6c63430008120033";

type AntiqueCertificationIssuanceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AntiqueCertificationIssuanceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AntiqueCertificationIssuance__factory extends ContractFactory {
  constructor(...args: AntiqueCertificationIssuanceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AntiqueCertificationIssuance & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): AntiqueCertificationIssuance__factory {
    return super.connect(runner) as AntiqueCertificationIssuance__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AntiqueCertificationIssuanceInterface {
    return new Interface(_abi) as AntiqueCertificationIssuanceInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AntiqueCertificationIssuance {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as AntiqueCertificationIssuance;
  }
}
