/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  AntiqueVerification,
  AntiqueVerificationInterface,
} from "../AntiqueVerification";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "artifactName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "certificationDate",
        type: "uint256",
      },
    ],
    name: "CertificationVerified",
    type: "event",
  },
  {
    inputs: [],
    name: "certificationCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "certifications",
    outputs: [
      {
        internalType: "address",
        name: "ownerAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "artifactName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "certificationDate",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isCertified",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "_artifactName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_certificationDate",
        type: "uint256",
      },
    ],
    name: "verifyCertification",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a47806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633c0359a414610046578063c55699c414610079578063e07c865e14610097575b600080fd5b610060600480360381019061005b919061032d565b6100b3565b6040516100709493929190610455565b60405180910390f35b610081610198565b60405161008e91906104a1565b60405180910390f35b6100b160048036038101906100ac919061061d565b61019e565b005b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010180546100fc906106bb565b80601f0160208091040260200160405190810160405280929190818152602001828054610128906106bb565b80156101755780601f1061014a57610100808354040283529160200191610175565b820191906000526020600020905b81548152906001019060200180831161015857829003601f168201915b5050505050908060020154908060030160009054906101000a900460ff16905084565b60015481565b60405180608001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200160011515815250600080600154815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190816102489190610898565b506040820151816002015560608201518160030160006101000a81548160ff0219169083151502179055509050506001600081548092919061028990610999565b91905055508273ffffffffffffffffffffffffffffffffffffffff167fff2110ba48592a7333474f50d8ea3a9bf457ad089897c1d98ad7fb47b273db7f83836040516102d69291906109e1565b60405180910390a2505050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61030a816102f7565b811461031557600080fd5b50565b60008135905061032781610301565b92915050565b600060208284031215610343576103426102ed565b5b600061035184828501610318565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103858261035a565b9050919050565b6103958161037a565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156103d55780820151818401526020810190506103ba565b60008484015250505050565b6000601f19601f8301169050919050565b60006103fd8261039b565b61040781856103a6565b93506104178185602086016103b7565b610420816103e1565b840191505092915050565b610434816102f7565b82525050565b60008115159050919050565b61044f8161043a565b82525050565b600060808201905061046a600083018761038c565b818103602083015261047c81866103f2565b905061048b604083018561042b565b6104986060830184610446565b95945050505050565b60006020820190506104b6600083018461042b565b92915050565b6104c58161037a565b81146104d057600080fd5b50565b6000813590506104e2816104bc565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61052a826103e1565b810181811067ffffffffffffffff82111715610549576105486104f2565b5b80604052505050565b600061055c6102e3565b90506105688282610521565b919050565b600067ffffffffffffffff821115610588576105876104f2565b5b610591826103e1565b9050602081019050919050565b82818337600083830152505050565b60006105c06105bb8461056d565b610552565b9050828152602081018484840111156105dc576105db6104ed565b5b6105e784828561059e565b509392505050565b600082601f830112610604576106036104e8565b5b81356106148482602086016105ad565b91505092915050565b600080600060608486031215610636576106356102ed565b5b6000610644868287016104d3565b935050602084013567ffffffffffffffff811115610665576106646102f2565b5b610671868287016105ef565b925050604061068286828701610318565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806106d357607f821691505b6020821081036106e6576106e561068c565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261074e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610711565b6107588683610711565b95508019841693508086168417925050509392505050565b6000819050919050565b600061079561079061078b846102f7565b610770565b6102f7565b9050919050565b6000819050919050565b6107af8361077a565b6107c36107bb8261079c565b84845461071e565b825550505050565b600090565b6107d86107cb565b6107e38184846107a6565b505050565b5b81811015610807576107fc6000826107d0565b6001810190506107e9565b5050565b601f82111561084c5761081d816106ec565b61082684610701565b81016020851015610835578190505b61084961084185610701565b8301826107e8565b50505b505050565b600082821c905092915050565b600061086f60001984600802610851565b1980831691505092915050565b6000610888838361085e565b9150826002028217905092915050565b6108a18261039b565b67ffffffffffffffff8111156108ba576108b96104f2565b5b6108c482546106bb565b6108cf82828561080b565b600060209050601f83116001811461090257600084156108f0578287015190505b6108fa858261087c565b865550610962565b601f198416610910866106ec565b60005b8281101561093857848901518255600182019150602085019450602081019050610913565b868310156109555784890151610951601f89168261085e565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109a4826102f7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109d6576109d561096a565b5b600182019050919050565b600060408201905081810360008301526109fb81856103f2565b9050610a0a602083018461042b565b939250505056fea264697066735822122060cc4e977a6b7907180852519f51d3500f1b3d3f9f965f64dbd1693c3441842a64736f6c63430008120033";

type AntiqueVerificationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AntiqueVerificationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AntiqueVerification__factory extends ContractFactory {
  constructor(...args: AntiqueVerificationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AntiqueVerification & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): AntiqueVerification__factory {
    return super.connect(runner) as AntiqueVerification__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AntiqueVerificationInterface {
    return new Interface(_abi) as AntiqueVerificationInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AntiqueVerification {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as AntiqueVerification;
  }
}
